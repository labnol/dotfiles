# See dunst(5) for all configuration options

[global]
    # Display notification on focused monitor.  Possible modes are:
    #   mouse: follow mouse pointer
    #   keyboard: follow window with keyboard focus
    #   none: don't follow anything
    #
    # "keyboard" needs a window manager that exports the
    # _NET_ACTIVE_WINDOW property.
    # This should be the case for almost all modern window managers.
    #
    # If this option is set to mouse or keyboard, the monitor option
    # will be ignored.
    follow = none

    # constant width
    width = 480

    # The maximum height of a single notification, excluding the frame
    height = 120

    # Position of the notification
    origin = bottom-right

    # Offset from the origin
    offset = 0x0

    # Maximum number of notification (0 means no limit)
    notification_limit = 4

    # Defines width in pixels of frame around the notification window.
    # Set to 0 to disable.
    frame_width = 2

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    # Set to 0 to disable.
    # Transient notifications ignore this setting.
    idle_threshold = 60

    ### Text ###

    font = Monospace 10

    # Specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle", and "end".
    ellipsize = end

    ### Icons ###

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 22

    # Paths to default icons.
    icon_path = /usr/share/icons/Adwaita/22x22/status/:/usr/share/icons/Adwaita/22x22/devices/

    ### Misc/Advanced ###

    # dmenu path.
    dmenu = /usr/bin/rofi -dmenu -p 'dunst'

    # Browser for opening urls in context menu.
    browser = /usr/bin/qutebrowser

    # Define the title of the windows spawned by dunst
    title = dunst

    # Define the class of the windows spawned by dunst
    class = notification

    # Defines list of actions for each mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: Invoke the action determined by the action_name rule. If there is no
    #              such action, open the context menu.
    # * open_url: If the notification has exactly one url, open it. If there are multiple
    #             ones, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    # * context: Open context menu for the notification.
    # * context_all: Open context menu for all notifications.
    # These values can be strung together for each mouse event, and
    # will be executed in sequence.
    mouse_left_click = none
    mouse_middle_click = none
    mouse_right_click = none

[urgency_normal]
    icon = messagebox_info

[urgency_critical]
    background = "#802a2a"
    timeout = 0
    icon = messagebox_critical

# vim: ft=cfg
